'''
Implementation of Floyd-Warshall algorithm designed by Radin Sadeghian(https://github.com/Radin-rs)
It should be noted that to place the desired graph, set the variable the_graph and also use INF to
set the infinity sign.
'''

INF = 999999

def floyd_warshall(graph):
    number_of_V = len(graph)
    distance = graph
    for k in range(number_of_V):
        for i in range(number_of_V):
            for j in range(number_of_V):
                distance[i][j] = min(distance[i][j], distance[i][k] + distance[k][j])

    result_viewer(number_of_V, distance)

def result_viewer(number_of_V, distance):
    for i in range(number_of_V):
        for j in range(number_of_V):
            if distance[i][j] == INF:
                print("âˆž", end=" ")
            else:
                print(distance[i][j], end=" ")
        print(" ")


the_graph = [ [2, 8, 5],
              [3, 0, INF],
              [INF, 2, 0],
]

floyd_warshall(the_graph)
